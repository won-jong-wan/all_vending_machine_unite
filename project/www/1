<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>menu</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/static/style.css">
</head>
<body>
  <div class="wrap">
    <h1>menu</h1>
    <div class="card">
      <div class="k-grid" id="menu"></div>
    </div>

    <div class="k-cart">
      <h3>Cart</h3>
      <ul id="cart"></ul>
      <div class="k-actions">
        <button class="btn" onclick="clearCart()">Clear</button>
        <button class="btn primary" onclick="placeOrder()">Place Order</button>
      </div>
      <div id="orderResult" style="margin-top:8px;color:#ccdf20;"></div>
    </div>
  </div>

  <script>
const cart = []; // {id, name, price, qty}

// ==================== 장바구니 담기 ====================
function add(id, name, price){
  const f = cart.find(x=>x.id===id);
  if(f) f.qty += 1;
  else cart.push({id, name, price, qty:1});
  render();
}

// ==================== 장바구니 비우기 ====================
function clearCart(){
  cart.length = 0;
  render();
}

// ==================== 장바구니 렌더링 ====================
function render(){
  const ul = document.getElementById('cart');
  ul.innerHTML = '';
  cart.forEach(it=>{
    const li = document.createElement('li');
    li.textContent = `${it.name} * ${it.qty}`;
    ul.appendChild(li);
  });
}

// ==================== 주문 전송 ====================
async function placeOrder(){
  if(cart.length===0){
    alert('Cart is empty');
    return;
  }
  // order API 형식: "menu_id*qty,menu_id*qty"
  const items = cart.map(it=>`${it.id}*${it.qty}`).join(',');
  const res = await fetch(`/api/order?items=${encodeURIComponent(items)}`)
              .then(r=>r.json())
              .catch(()=>({ok:false}));

  if(res.ok){
    document.getElementById('orderResult').textContent =
  `Order Received! Number: ${(res.code ?? String(res.order_id).padStart(3,'0'))}`;

    clearCart();
  } else {
    alert('Order failed');
  }
}

// ==================== 메뉴 불러오기 ====================
async function loadMenu(){
  const data = await fetch('/api/menu')
                .then(r=>r.json())
                .catch(()=>({menu:[]}));
  const cont = document.getElementById('menu');
  cont.innerHTML = '';
  (data.menu||[]).forEach(m=>{
    const art = document.createElement('article');
    art.className = 'k-item';
    art.innerHTML = `
      <div class="k-photo">
        ${m.image ? `<img src="${m.image}" alt="">` : 'IMG'}
      </div>
      <div class="k-meta">
        <div class="k-name">${m.name}</div>
        <div class="k-price">₩${(+m.price).toLocaleString()}</div>
      </div>
      <button class="k-add" onclick="add(${m.id}, '${m.name.replace(/'/g,"&#39;")}', ${m.price})">＋</button>
    `;
    cont.appendChild(art);
  });
}

// 페이지 시작 시 메뉴 불러오기
loadMenu();
</script>

</body>
</html>

